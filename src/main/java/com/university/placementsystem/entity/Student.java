package com.university.placementsystem.entity;

import jakarta.persistence.*;
import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.*;

/**
 * Entity representing a student profile in the Placement System.
 *
 * <p>Each student is associated with a single {@link User} account
 * and contains academic information, graduation year, skills,
 * and resume details.</p>
 */
@Entity
@Table(name = "students")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class Student {

    // Primary key (auto-generated by the database)
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    // Associated user account (1-to-1, unique per student)
    @NotNull(message = "User cannot be null")
    @OneToOne(fetch = FetchType.LAZY, optional = false)
    @JoinColumn(name = "user_id", nullable = false, unique = true)
    private User user;

    // University name of the student
    @NotBlank(message = "University cannot be blank")
    @Column(nullable = false, length = 150)
    private String university;

    // Degree pursued by the student
    @NotBlank(message = "Degree cannot be blank")
    @Column(nullable = false, length = 100)
    private String degree;

    // Graduation year (must be between 1900 and 2100)
    @NotNull(message = "Graduation year cannot be null")
    @Min(value = 1900, message = "Graduation year must be at least 1900")
    @Max(value = 2100, message = "Graduation year must be at most 2100")
    @Column(name = "graduation_year", nullable = false)
    private Integer graduationYear;

    // Skills (stored as comma-separated string for now)
    // TODO: normalize into a table or store as JSON if needed
    @Column(length = 500)
    private String skills;

    // Path to the uploaded resume file (e.g., PDF in storage)
    @Column(name = "resume_path")
    private String resumePath;
}
