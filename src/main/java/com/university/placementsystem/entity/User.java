package com.university.placementsystem.entity;

import jakarta.persistence.*;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import lombok.*;

/**
 * Entity class representing a system user in the Placement System.
 *
 * <p>This entity maps to the {@code users} table (pluralized to avoid conflicts
 * with reserved keywords like {@code user} in some SQL dialects).</p>
 *
 * <p>Each user has login credentials, a role (STUDENT, ORGANIZATION, ADMIN),
 * and an active flag to control account access.</p>
 */
@Entity
@Table(name = "users")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class User {

    // Primary key (auto-generated by the database)
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    // Display the name of the user
    @NotBlank(message = "Username cannot be blank")
    @Column(nullable = false, length = 100)
    private String username;

    // Encrypted password (hashed, not plain text)
    @NotBlank(message = "Password cannot be blank")
    @Column(nullable = false)
    private String password;

    // User role: STUDENT, ORGANIZATION, ADMIN
    @Enumerated(EnumType.STRING)
    @Column(nullable = false, length = 20)
    private UserRole role;

    // Email address (unique and validated)
    @NotBlank(message = "Email cannot be blank")
    @Email(message = "Email is not valid")
    @Column(nullable = false, unique = true, length = 150)
    private String email;

    // Flag to indicate if the user account is active
    @Column(nullable = false)
    private boolean active = true;

    /**
     * Convenience constructor for referencing a user by ID only.
     *
     * <p>Useful when creating relationships (e.g., foreign keys) without
     * loading the full entity from the database.</p>
     *
     * @param id the user ID
     */
    public User(Long id) {
        this.id = id;
    }
}
